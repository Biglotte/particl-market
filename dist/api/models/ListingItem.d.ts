import { Bookshelf } from '../../config/Database';
import { Collection } from 'bookshelf';
import { ItemInformation } from './ItemInformation';
import { PaymentInformation } from './PaymentInformation';
import { MessagingInformation } from './MessagingInformation';
import { ListingItemObject } from './ListingItemObject';
import { ListingItemSearchParams } from '../requests/ListingItemSearchParams';
import { FavoriteItem } from './FavoriteItem';
import { ListingItemTemplate } from './ListingItemTemplate';
import { Bid } from './Bid';
import { FlaggedItem } from './FlaggedItem';
import { Market } from './Market';
import { ShoppingCartItem } from './ShoppingCartItem';
import { ActionMessage } from './ActionMessage';
export declare class ListingItem extends Bookshelf.Model<ListingItem> {
    static RELATIONS: string[];
    static fetchById(value: number, withRelated?: boolean): Promise<ListingItem>;
    static fetchByHash(value: string, withRelated?: boolean): Promise<ListingItem>;
    static fetchByCategory(categoryId: number, withRelated?: boolean): Promise<Collection<ListingItem>>;
    static searchBy(options: ListingItemSearchParams, withRelated?: boolean): Promise<Collection<ListingItem>>;
    readonly tableName: string;
    readonly hasTimestamps: boolean;
    Id: number;
    Hash: string;
    Seller: string;
    UpdatedAt: Date;
    CreatedAt: Date;
    ItemInformation(): ItemInformation;
    PaymentInformation(): PaymentInformation;
    MessagingInformation(): Collection<MessagingInformation>;
    ListingItemObjects(): Collection<ListingItemObject>;
    FavoriteItems(): Collection<FavoriteItem>;
    ListingItemTemplate(): ListingItemTemplate;
    Bids(): Collection<Bid>;
    Market(): Market;
    FlaggedItem(): FlaggedItem;
    ShoppingCartItem(): Collection<ShoppingCartItem>;
    ActionMessages(): Collection<ActionMessage>;
}
